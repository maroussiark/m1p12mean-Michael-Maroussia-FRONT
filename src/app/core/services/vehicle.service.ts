import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { Vehicle,MaintenanceRecord } from '../models';
import { ApiService } from './api.service';

@Injectable({
  providedIn: 'root'
})
export class VehicleService {

  private baseUrl = '/vehicles';  // URL de base pour les requÃªtes

  constructor(private http: ApiService) { }


  getAllVehicles(): Observable<Vehicle[]> {
    return this.http.get<Vehicle[]>(`${this.baseUrl}`);
  }

  // ðŸ“Œ Obtenir tous les vÃ©hicules d'un utilisateur
  getVehiclesByUser(): Observable<Vehicle[]> {
    return this.http.get<Vehicle[]>(`${this.baseUrl}/user/`);
  }

  // ðŸ“Œ Obtenir un vÃ©hicule par son ID
  getVehicleById(vehicleId: string): Observable<Vehicle> {
    return this.http.get<Vehicle>(`${this.baseUrl}/${vehicleId}`);
  }

  // ðŸ“Œ CrÃ©er un nouveau vÃ©hicule
  createVehicle(vehicle: Vehicle): Observable<Vehicle> {
    return this.http.post<Vehicle>(this.baseUrl, vehicle);
  }

  // ðŸ“Œ Mettre Ã  jour un vÃ©hicule
  updateVehicle(vehicleId: string, vehicle: Vehicle): Observable<Vehicle> {
    console.log("Updating ..",vehicle);
    return this.http.put<Vehicle>(`${this.baseUrl}/${vehicleId}`,vehicle);
  }

  // ðŸ“Œ Supprimer un vÃ©hicule
  deleteVehicle(vehicleId: string): Observable<void> {
    return this.http.delete<void>(`${this.baseUrl}/${vehicleId}`);
  }

  // ðŸ“Œ Ajouter un enregistrement de maintenance Ã  un vÃ©hicule
  addMaintenanceRecord(vehicleId: string, record: MaintenanceRecord): Observable<Vehicle> {
    return this.http.post<Vehicle>(`${this.baseUrl}/${vehicleId}/maintenance`, record);
  }
}
